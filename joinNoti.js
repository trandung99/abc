module.exports.config = {
	name: "joinNoti",
	eventType: ["log:subscribe"],
	version: "1.0.4",
	credits: "Mirai Team",
	description: "Th√¥ng b√°o bot ho·∫∑c ng∆∞·ªùi v√†o nh√≥m",
	dependencies: {
		"fs-extra": ""
	}
};

module.exports.run = async function({ api, event, Users }) {
	const { join } = global.nodemodule["path"];
	const { threadID } = event;
	if (event.logMessageData.addedParticipants.some(i => i.userFbId == api.getCurrentUserID())) {
		api.changeNickname([ ${global.config.PREFIX} ] ‚Ä¢ ${(!global.config.BOTNAME) ? "Made by CatalizCS and SpermLord" : global.config.BOTNAME}, threadID, api.getCurrentUserID());
		return api.sendMessage(`¬ª ùôÜùôÄùôè ùôâùôäùôÑ ùôèùôÉùòºùôâùôÉ ùòæùôäùôâùôÇ¬´\n\n‚óÜ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ\n‚ö†ùìõùìæùì™Ã£ÃÇùìΩ ùìëùì∏ùìΩ\n1. C·∫•m spam nhi·ªÅu l·ªánh trong 1 ph√∫t\n2. C·∫•m 2 bot trong 1 box (=ban)\n3. H·∫°n ch·∫ø menu v√† help (n√™n copy l·∫°i)\n4. Th√™m bot ko xin (=ban)\n5. ƒê·ª´ng c√≥ m√† ch·ª≠i bot s·∫Ω b·ªã ban vƒ©nh vi·ªÖn ‚ò†.\n6BOX c√≥ bot l√† c√≥ acc admin bot(l√≠ do l∆∞·ªùi v√†o acc fb check tn). \n7Kh√¥ng nh·∫ßm ADMINBOT-(ng∆∞·ªùi ch·∫°y bot) v·ªõi BOT
\n‚óÜ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ\nüìùNh·∫≠p !in4 admin s·∫Ω c√≥ th√¥ng tin c·ªßa adminbot\nüìåLi√™n h·ªá khi c·∫ßn thi·∫øt\n‚öúQTV c√≥ th·ªÉ d√πng '!help rule' ƒë·ªÉ xem h∆∞·ªõng d·∫´n v√† set b·∫£ng lu·∫≠t box\n‚öúTh√†nh vi√™n d√πng '!rule' ƒë·ªÉ xem lu·∫≠t box c·ªßa m√¨nh\nHi·ªán c√≥ 200 l·ªánh c√≥ th·ªÉ s·ª≠ d·ª•ng tr√™n bot n√†y \n‚óÜ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ\nThis bot made by JRT. Thank you for using\nXin c·∫£m ∆°n ƒë√£ ƒë·ªçc...UwU\n¬© Admin: TR·∫¶N D≈®NG - C·ª§ D≈®NG `, threadID);
	}
	else {
		try {
			const { createReadStream, existsSync, mkdirSync } = global.nodemodule["fs-extra"];
			let { threadName, participantIDs } = await api.getThreadInfo(threadID);

			const threadData = global.data.threadData.get(parseInt(threadID)) || {};
			const path = join(__dirname, "cache", "joinGif");
			const pathGif = join(path, ${1625962298}.mp4);

			var mentions = [], nameArray = [], memLength = [], i = 0;
			
			for (id in event.logMessageData.addedParticipants) {
				const userName = event.logMessageData.addedParticipants[id].fullName;
				nameArray.push(userName);
				mentions.push({ tag: userName, id });
				memLength.push(participantIDs.length - i++);

				if (!global.data.allUserID.includes(id)) {
					await Users.createData(id, { name: userName, data: {} });
					global.data.userName.set(id, userName);
					global.data.allUserID.push(id);
				}
			}
			memLength.sort((a, b) => a - b);
			
			(typeof threadData.customJoin == "undefined") ? msg = "Welcome aboard {name}.\nCh√†o m·ª´ng ƒë√£ ƒë·∫øn v·ªõi {threadName}.\n{type} l√† th√†nh vi√™n th·ª© {soThanhVien} c·ªßa nh√≥m ü•≥.‚úÖKhi v√¥ c√°c c·∫≠u h√£y d√πng l·ªánh ƒë·ªÉ xem lu·∫≠t box nh√©:\nüëâüèª!rule " : msg = threadData.customJoin;
			msg = msg
			.replace(/\{name}/g, nameArray.join(', '))
			.replace(/\{type}/g, (memLength.length > 1) ?  'c√°c b·∫°n' : 'b·∫°n')
			.replace(/\{soThanhVien}/g, memLength.join(', '))
			.replace(/\{threadName}/g, threadName);

			if (existsSync(path)) mkdirSync(path, { recursive: true });

			if (existsSync(pathGif)) formPush = { body: msg, attachment: createReadStream(pathGif), mentions }
			else formPush = { body: msg, mentions }

			return api.sendMessage(formPush, threadID);
		} catch (e) { return console.log(e) };
	}
}
